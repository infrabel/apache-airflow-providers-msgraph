# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry lock --no-update
        poetry install -vv  
    - name: Run Flake8
      run: poetry run pflake8 --ignore=E501 airflow/providers/microsoft/msgraph
    - name: Run MyPu
      run: |
        cd airflow/providers/microsoft
        poetry run mypy --config-file=../../../mypy.ini msgraph --namespace-packages
    - name: Run Black
      run: poetry run black airflow/providers/microsoft/msgraph --check --diff --color
    - name: Run Pylint
      run: |
        poetry run pylint --fail-under=6.5 airflow/providers/microsoft/msgraph \
                          -r n \
                          --msg-template="{path}':'{line}':' [{msg_id}({symbol}), {obj}] {msg}" | tee reports/pylint.txt
    - name: Run unit tests
      run: |
        mkdir -p logs reports
        poetry run nose2 --start-dir tests/unit --junit-xml --with-coverage --verbose
        mv xunit-result.xml reports/xunit-result.xml
        mv coverage.xml reports/coverage.xml
    - name: Build package
      run: poetry build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
